Resources:
  CacheClusterSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: "${self:custom.description} CacheClusterSubnetGroup"
      SubnetIds:
        - Ref: PrivateSubnet

  CacheClusterSecurityGroup:
    DependsOn: VPC
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "${self:custom.description} CacheClusterSecurityGroup"
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: ${env:REDIS_PORT}
          ToPort: ${env:REDIS_PORT}
          SourceSecurityGroupId:
            Ref: SecurityGroup
      Tags:
        - Key: Name
          Value: "${self:custom.description} CacheClusterSecurityGroup"

  CacheCluster:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      Engine: redis
      CacheNodeType: cache.t2.micro
      NumCacheNodes: 1
      CacheSubnetGroupName:
        Ref: CacheClusterSubnetGroup
      VpcSecurityGroupIds:
        - "Fn::GetAtt": CacheClusterSecurityGroup.GroupId
      Tags:
        - Key: Name
          Value: "${self:custom.description} CacheCluster"