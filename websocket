#!/usr/bin/env php
<?php

define('LARAVEL_START', microtime(true));

require __DIR__.'/vendor/autoload.php';

use Bref\Context\Context;
use Bref\Event\ApiGateway\WebsocketEvent;
use Bref\Event\ApiGateway\WebsocketHandler;
use Bref\Event\Http\HttpResponse;
use Bref\Websocket\SimpleWebsocketClient;

use App\Events\Websockets\PublicEvent;

class Handler extends WebsocketHandler
{
    public function handleWebsocket(WebsocketEvent $event, Context $context) : HttpResponse
    {
        echo json_encode($event->toArray());

        switch ($event->getEventType()) {
            case 'CONNECT':
                return new HttpResponse('connect');

            case 'DISCONNECT':
                return new HttpResponse('disconnect');

            default:
                PublicEvent::dispatch($event->getConnectionId(), $event->getApiId(), $event->getRegion(), $event->getStage());

                // switch ($event->getRouteKey()) {
                //     case '$default':
                //         return null;
                    
                //     case 'message':

                // }

                // try {
                //     $client = SimpleWebsocketClient::create($event->getApiId(), $event->getRegion(), $event->getStage());
                //     $client->message($connectionId, 'pong');
                //     $status = $client->status($connectionId);

                // } catch(\Exception $e) {
                //     return new HttpResponse($e->getMessage(), [], 400);
                // }

                return new HttpResponse('message');

        }

        return new HttpResponse('400 bad request', [], 400);
    }

}

return new Handler();